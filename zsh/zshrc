#!/usr/bin/env zsh
# dotfiles
# Kashev Dalmia | @kashev | kashev.dalmia@gmail.com

#########
# zshrc #
#########

###########################
# oh-my-zsh Configuration #
###########################

# oh-my-zsh Installation Location
export ZSH=$HOME/.oh-my-zsh

# Custom oh-my-zsh-custom Folder
ZSH_CUSTOM=$HOME/.oh-my-zsh-custom

# Other oh-my-zsh Options
ZSH_THEME="kashev"
COMPLETION_WAITING_DOTS="true"

# oh-my-zsh Plugins
plugins=(
    colored-man-pages
    command-not-found
    git
    pip
    sublime
    wd
    web-search
    zsh_reload
)

# Load oh-my-zsh #
source $ZSH/oh-my-zsh.sh

######################
# User Configuration #
######################

export PATH=$HOME/bin:/usr/local/bin:$PATH

# Change History to not share incremental history between terminals.
setopt append_history no_share_history

# Allow for normal globbing
unsetopt nomatch

# Set a HOSTNAME variable, like in bash
export HOSTNAME=`hostname`

export BROWSER=google-chrome

#######################
# Add Scripts to Path #
#######################
export PATH=$PATH:$HOME/.shell-scripts

##############################
# Long Command Configuration #
##############################

# Report CPU usage for commands running longer than 10 seconds
# Thanks to http://nuclearsquid.com/writings/reporttime-in-zsh/
REPORTTIME=10

# https://superuser.com/a/578651/154363
# http://contrapunctus.net/blog/2009/growl-upon-completion
if [[ -x `which notify-send` ]]; then
    notify-preexec-hook() {
        zsh_notifier_cmd="$1"
        zsh_notifier_time="`date +%s`"
    }

    notify-precmd-hook() {
        local time_taken

        if [[ "${zsh_notifier_cmd}" != "" ]]; then
            time_taken=$(( `date +%s` - ${zsh_notifier_time} ))
            if (( $time_taken > $REPORTTIME )); then
                notify-send "task finished" \
                    "'$zsh_notifier_cmd' exited after $time_taken seconds"
            fi
        fi
        zsh_notifier_cmd=
    }
fi

[[ -z $preexec_functions ]] && preexec_functions=()
preexec_functions=($preexec_functions notify-preexec-hook)

[[ -z $precmd_functions ]] && precmd_functions=()
precmd_functions=($precmd_functions notify-precmd-hook)

#############################
# VIRTUAL ENV CONFIGURATION #
#############################
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/dev
source /usr/local/bin/virtualenvwrapper.sh

# Fix Tilix VTE Settings.
# https://gnunn1.github.io/tilix-web/manual/vteconfig/
if [ $TILIX_ID ] || [ $VTE_VERSION ]; then
        source /etc/profile.d/vte.sh
fi
